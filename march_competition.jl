#### march model II

module MarchCompetition

using Random
using Distributions

export calc_mean_curve

function calc_mean(d1::Distribution, d2::Distribution, n::Integer, sim::Integer = 5000)
    quantile([maximum(rand(d2, n)) - rand(d1) for i in 1:5000], 1/(n+1))
end

function calc_mean_curve(fun::Function, σ₁²_range::StepRangeLen{T, U, U}) where {T, U}
    map(fun, σ₁²_range)
end

function calc_mean_curve(fun::Function, σ₁²_vec::Vector{T}) where T
    map(fun, σ₁²_vec)
end

function calc_mean_curve(n::Integer, σ₁²_range::AbstractRange)
    calc_mean_curve(x->calc_mean(Normal(0, x), Normal(), n), sqrt.(σ₁²_range))
end

end
